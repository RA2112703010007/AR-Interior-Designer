<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AR Interior Designer</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .ar-container {
            perspective: 1000px;
            transform-style: preserve-3d;
        }
        .room-wall {
            transition: all 0.3s ease;
        }
        .furniture-item {
            transition: transform 0.2s ease;
            cursor: move;
            transform-style: preserve-3d;
        }
        .scanning-animation {
            animation: pulse 2s infinite;
        }
        @keyframes pulse {
            0% { opacity: 0.5; }
            50% { opacity: 1; }
            100% { opacity: 0.5; }
        }
    </style>
</head>
<body class="bg-gray-100">
    <div class="container mx-auto px-4 py-8">
        <header class="mb-8">
            <h1 class="text-4xl font-bold text-indigo-800">AR Interior Designer</h1>
            <p class="text-gray-600 mt-2">Redesign your space with augmented reality</p>
        </header>

        <div class="flex flex-col lg:flex-row gap-8">
            <!-- Main AR Viewport -->
            <div class="lg:w-3/4">
                <div id="ar-viewport" class="relative bg-gray-900 rounded-xl overflow-hidden h-96 lg:h-[500px]">
                    <!-- Room scanning visualization -->
                    <div id="scanning-ui" class="absolute inset-0 flex items-center justify-center flex-col">
                        <div class="scanning-animation bg-indigo-600/20 rounded-full w-64 h-64 flex items-center justify-center mb-4">
                            <div class="scanning-animation bg-indigo-600/40 rounded-full w-48 h-48 flex items-center justify-center">
                                <div class="scanning-animation bg-indigo-600/60 rounded-full w-32 h-32 flex items-center justify-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-indigo-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
                                    </svg>
                                </div>
                            </div>
                        </div>
                        <p class="text-white font-medium">Scanning your room...</p>
                        <p class="text-gray-300 text-sm mt-2">Move your device slowly around the space</p>
                    </div>

                    <!-- AR Room visualization -->
                    <div id="ar-room" class="hidden w-full h-full ar-container relative">
                        <!-- Room elements would be placed here -->
                        <div class="absolute bottom-0 left-0 right-0 h-48 bg-gray-200 rounded-t-xl" id="floor"></div>
                        <div class="absolute bottom-48 left-0 w-48 h-48 bg-gray-300 rounded-r-xl" id="left-wall"></div>
                        <div class="absolute bottom-48 right-0 w-48 h-48 bg-gray-300 rounded-l-xl" id="right-wall"></div>
                        
                        <!-- Furniture items would be placed here -->
                        <div id="furniture-container"></div>
                    </div>
                </div>

                <!-- Furniture placement controls -->
                <div id="placement-controls" class="hidden mt-4 bg-white rounded-lg p-4 shadow">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="font-medium text-gray-800">Placement Controls</h3>
                        <div class="flex gap-2">
                            <button id="move-btn" class="px-3 py-1 bg-indigo-100 text-indigo-700 rounded">Move</button>
                            <button id="rotate-btn" class="px-3 py-1 bg-gray-100 text-gray-700 rounded">Rotate</button>
                            <button id="delete-btn" class="px-3 py-1 bg-red-100 text-red-700 rounded">Delete</button>
                        </div>
                    </div>
                    <div class="grid grid-cols-3 gap-4">
                        <div class="col-span-3">
                            <label class="block text-sm font-medium text-gray-700 mb-1">Position</label>
                            <div class="grid grid-cols-3 gap-2">
                                <div class="bg-gray-100 p-2 rounded text-center text-sm">X: <span id="pos-x">0</span></div>
                                <div class="bg-gray-100 p-2 rounded text-center text-sm">Y: <span id="pos-y">0</span></div>
                                <div class="bg-gray-100 p-2 rounded text-center text-sm">Z: <span id="pos-z">0</span></div>
                            </div>
                        </div>
                        <div class="col-span-3">
                            <label class="block text-sm font-medium text-gray-700 mb-1">Rotation</label>
                            <div class="grid grid-cols-3 gap-2">
                                <div class="bg-gray-100 p-2 rounded text-center text-sm">X: <span id="rot-x">0</span>°</div>
                                <div class="bg-gray-100 p-2 rounded text-center text-sm">Y: <span id="rot-y">0</span>°</div>
                                <div class="bg-gray-100 p-2 rounded text-center text-sm">Z: <span id="rot-z">0</span>°</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Furniture Catalog -->
            <div class="lg:w-1/4">
                <div class="bg-white rounded-xl shadow p-4">
                    <h2 class="text-xl font-semibold mb-4 text-gray-800">Furniture Catalog</h2>
                    
                    <div class="grid grid-cols-2 gap-3">
                        <!-- Furniture items -->
                        <div class="furniture-card bg-gray-50 rounded-lg p-3 cursor-pointer hover:bg-indigo-50 transition" data-model="sofa">
                            <div class="relative h-32 mb-2">
                                <img src="https://placehold.co/400?text=Modern+Sofa" alt="Modern gray fabric sofa with clean lines and minimalistic design" class="w-full h-full object-cover rounded">
                            </div>
                            <p class="text-sm font-medium text-center">Modern Sofa</p>
                        </div>
                        
                        <div class="furniture-card bg-gray-50 rounded-lg p-3 cursor-pointer hover:bg-indigo-50 transition" data-model="chair">
                            <div class="relative h-32 mb-2">
                                <img src="https://placehold.co/400?text=Accent+Chair" alt="Contemporary accent chair in navy blue velvet with gold legs" class="w-full h-full object-cover rounded">
                            </div>
                            <p class="text-sm font-medium text-center">Accent Chair</p>
                        </div>
                        
                        <div class="furniture-card bg-gray-50 rounded-lg p-3 cursor-pointer hover:bg-indigo-50 transition" data-model="table">
                            <div class="relative h-32 mb-2">
                                <img src="https://placehold.co/400?text=Coffee+Table" alt="Round wooden coffee table with metal frame and smoked glass top" class="w-full h-full object-cover rounded">
                            </div>
                            <p class="text-sm font-medium text-center">Coffee Table</p>
                        </div>
                        
                        <div class="furniture-card bg-gray-50 rounded-lg p-3 cursor-pointer hover:bg-indigo-50 transition" data-model="lamp">
                            <div class="relative h-32 mb-2">
                                <img src="https://placehold.co/400?text=Floor+Lamp" alt="Tall modern floor lamp with adjustable arms and fabric shade" class="w-full h-full object-cover rounded">
                            </div>
                            <p class="text-sm font-medium text-center">Floor Lamp</p>
                        </div>
                        
                        <div class="furniture-card bg-gray-50 rounded-lg p-3 cursor-pointer hover:bg-indigo-50 transition" data-model="bookshelf">
                            <div class="relative h-32 mb-2">
                                <img src="https://placehold.co/400?text=Bookshelf" alt="Modular bookshelf with multiple compartments in light oak wood" class="w-full h-full object-cover rounded">
                            </div>
                            <p class="text-sm font-medium text-center">Bookshelf</p>
                        </div>
                        
                        <div class="furniture-card bg-gray-50 rounded-lg p-3 cursor-pointer hover:bg-indigo-50 transition" data-model="rug">
                            <div class="relative h-32 mb-2">
                                <img src="https://placehold.co/400?text=Area+Rug" alt="Geometric patterned area rug with navy and rust colors" class="w-full h-full object-cover rounded">
                            </div>
                            <p class="text-sm font-medium text-center">Area Rug</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Realistic rendering toggle -->
        <div class="mt-8 bg-white rounded-xl shadow p-4">
            <div class="flex items-center justify-between">
                <div>
                    <h3 class="font-medium text-gray-800">Realistic Rendering</h3>
                    <p class="text-sm text-gray-500">Toggle advanced rendering features</p>
                </div>
                <label class="relative inline-flex items-center cursor-pointer">
                    <input type="checkbox" id="realistic-rendering-toggle" class="sr-only peer" checked>
                    <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-indigo-600"></div>
                </label>
            </div>
            
            <div id="rendering-settings" class="mt-4 grid grid-cols-1 md:grid-cols-3 gap-4">
                <div class="bg-gray-50 p-3 rounded-lg">
                    <div class="flex items-center mb-2">
                        <input type="checkbox" id="shadows-toggle" class="w-4 h-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500" checked>
                        <label for="shadows-toggle" class="ml-2 block text-sm font-medium text-gray-700">Dynamic Shadows</label>
                    </div>
                    <p class="text-xs text-gray-500">Calculate accurate shadows based on light sources</p>
                </div>
                
                <div class="bg-gray-50 p-3 rounded-lg">
                    <div class="flex items-center mb-2">
                        <input type="checkbox" id="occlusion-toggle" class="w-4 h-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500" checked>
                        <label for="occlusion-toggle" class="ml-2 block text-sm font-medium text-gray-700">Occlusion</label>
                    </div>
                    <p class="text-xs text-gray-500">Virtual objects hide behind real-world surfaces</p>
                </div>
                
                <div class="bg-gray-50 p-3 rounded-lg">
                    <div class="flex items-center mb-2">
                        <input type="checkbox" id="reflections-toggle" class="w-4 h-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500">
                        <label for="reflections-toggle" class="ml-2 block text-sm font-medium text-gray-700">Reflections</label>
                    </div>
                    <p class="text-xs text-gray-500">Realistic surface reflections (performance intensive)</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Simulate room scanning
            setTimeout(function() {
                document.getElementById('scanning-ui').classList.add('hidden');
                document.getElementById('ar-room').classList.remove('hidden');
                document.getElementById('placement-controls').classList.remove('hidden');
            }, 3000);
            
            // Furniture selection
            const furnitureCards = document.querySelectorAll('.furniture-card');
            const furnitureContainer = document.getElementById('furniture-container');
            let selectedFurniture = null;
            
            furnitureCards.forEach(card => {
                card.addEventListener('click', function() {
                    const modelType = this.getAttribute('data-model');
                    placeFurniture(modelType);
                });
            });
            
            function placeFurniture(modelType) {
                // Create a new furniture item
                const furnitureItem = document.createElement('div');
                furnitureItem.className = 'furniture-item absolute w-16 h-16 rounded';
                furnitureItem.innerHTML = `
                    <div class="relative w-full h-full">
                        <img src="https://placehold.co/200?text=3D+${modelType}" alt="3D model of ${modelType}" class="w-full h-full object-cover rounded">
                        <div class="absolute inset-0 border-2 border-indigo-500 opacity-0 hover:opacity-100 transition"></div>
                    </div>
                    <div class="absolute bottom-full left-1/2 transform -translate-x-1/2 -translate-y-2 bg-indigo-600 text-white text-xs px-2 py-1 rounded opacity-0 transition pointer-events-none">
                        ${modelType.replace(/\b\w/g, l => l.toUpperCase())}
                    </div>
                `;
                
                // Center position by default
                furnitureItem.style.left = '50%';
                furnitureItem.style.bottom = '50%';
                furnitureItem.setAttribute('data-model', modelType);
                
                furnitureContainer.appendChild(furnitureItem);
                selectFurniture(furnitureItem);
            }
            
            function selectFurniture(item) {
                // Deselect previous
                if (selectedFurniture) {
                    selectedFurniture.querySelector('.border-indigo-500').classList.remove('opacity-100');
                    selectedFurniture.querySelector('.bg-indigo-600').classList.remove('opacity-100');
                }
                
                // Select new
                selectedFurniture = item;
                item.querySelector('.border-indigo-500').classList.add('opacity-100');
                item.querySelector('.bg-indigo-600').classList.add('opacity-100');
                
                // Update controls
                document.getElementById('pos-x').textContent = '0';
                document.getElementById('pos-y').textContent = '0';
                document.getElementById('pos-z').textContent = '0';
                document.getElementById('rot-x').textContent = '0';
                document.getElementById('rot-y').textContent = '0';
                document.getElementById('rot-z').textContent = '0';
            }
            
            // Handle clicks on furniture items
            furnitureContainer.addEventListener('click', function(e) {
                let target = e.target;
                while (target && !target.classList.contains('furniture-item')) {
                    if (target === this) break;
                    target = target.parentElement;
                }
                
                if (target && target.classList.contains('furniture-item')) {
                    selectFurniture(target);
                    e.stopPropagation();
                }
            });
            
            // Handle room clicks to deselect
            document.getElementById('ar-room').addEventListener('click', function() {
                if (selectedFurniture) {
                    selectedFurniture.querySelector('.border-indigo-500').classList.remove('opacity-100');
                    selectedFurniture.querySelector('.bg-indigo-600').classList.remove('opacity-100');
                    selectedFurniture = null;
                }
            });
            
            // Movement controls
            let isMoving = false;
            let isRotating = false;
            
            document.getElementById('move-btn').addEventListener('click', function() {
                isMoving = true;
                isRotating = false;
                this.classList.add('bg-indigo-600', 'text-white');
                document.getElementById('rotate-btn').classList.remove('bg-indigo-600', 'text-white');
            });
            
            document.getElementById('rotate-btn').addEventListener('click', function() {
                isMoving = false;
                isRotating = true;
                this.classList.add('bg-indigo-600', 'text-white');
                document.getElementById('move-btn').classList.remove('bg-indigo-600', 'text-white');
            });
            
            document.getElementById('delete-btn').addEventListener('click', function() {
                if (selectedFurniture) {
                    selectedFurniture.remove();
                    selectedFurniture = null;
                }
            });
            
            // Drag functionality
            let isDragging = false;
            let startX, startY;
            let startLeft, startBottom;
            
            furnitureContainer.addEventListener('mousedown', function(e) {
                if (selectedFurniture) {
                    isDragging = true;
                    startX = e.clientX;
                    startY = e.clientY;
                    
                    const style = window.getComputedStyle(selectedFurniture);
                    startLeft = parseInt(style.left);
                    startBottom = parseInt(style.bottom);
                    
                    e.preventDefault();
                }
            });
            
            document.addEventListener('mousemove', function(e) {
                if (isDragging && selectedFurniture) {
                    const dx = e.clientX - startX;
                    const dy = e.clientY - startY;
                    
                    if (isMoving) {
                        selectedFurniture.style.left = `${startLeft + dx}px`;
                        selectedFurniture.style.bottom = `${startBottom - dy}px`;
                        document.getElementById('pos-x').textContent = Math.round(dx/5);
                        document.getElementById('pos-z').textContent = Math.round(dy/5);
                    } else if (isRotating) {
                        selectedFurniture.style.transform = `rotateY(${dx}deg) rotateX(${dy}deg)`;
                        document.getElementById('rot-y').textContent = Math.round(dx);
                        document.getElementById('rot-x').textContent = Math.round(dy);
                    }
                }
            });
            
            document.addEventListener('mouseup', function() {
                isDragging = false;
            });
            
            // Realistic rendering toggles
            document.getElementById('realistic-rendering-toggle').addEventListener('change', function(e) {
                const enabled = e.target.checked;
                const settings = document.querySelectorAll('#rendering-settings input[type="checkbox"]');
                
                settings.forEach(setting => {
                    setting.disabled = !enabled;
                    if (!enabled) setting.checked = false;
                });
            });
        });
    </script>
</body>
</html>
